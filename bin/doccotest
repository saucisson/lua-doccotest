#! /usr/bin/env lua

-- Default values for the program options:
local defaults = {
  input  = "",
  output = "test-results.txt",
  format = "none",
}

local doccotest  = require "doccotest" . new ()
local cli        = require "cliargs"
local logging    = require "logging"
local logger     = doccotest.logger

cli:set_name (arg [0])
cli:splat (
  "inputs",
  doccotest:translate { _ = "inputs:help" },
  tostring (defaults.input),
  999
)
cli:option (
  "--output=<filename>",
  doccotest:translate { _ = "output:help" },
  tostring (defaults.output)
)
cli:option (
  "--format=<format>",
  doccotest:translate { _ = "format:help" },
  tostring (defaults.format)
)
cli:flag (
  "-v, --verbose",
  doccotest:translate { _ = "verbose:help" }
)
local args = cli:parse ()
if not args then
  cli:print_help ()
  os.exit (1)
end

-- Set logging level, depending on the selected verbosity:
if args.verbose then
  doccotest.logger:setLevel (logging.DEBUG)
else
  doccotest.logger:setLevel (logging.INFO)
end

-- Run tests and show summary:
doccotest:test    (args.inputs)
doccotest:summary ()

-- If an output format is selected, generate a report:
if args.format:lower () == "none" then
  local _ = false -- nothing to do
elseif args.format:lower () == "tap" then
  doccotest:tap (args.output)
else
  logger:error (doccotest:translate {
    _      = "format:unknown",
    foramt = args.format,
  })
  os.exit (1)
end
